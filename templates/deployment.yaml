# Defines the deployment of the app running in a pod on any worker node
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: chemscraper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chemscraper
  template:
    metadata:
      labels:
        app: chemscraper
    spec:
{{- if .Values.config.enableGPU | default false }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nvidia.com/gpu.present
                    operator: In
                    values:
                      - 'true'
{{- end }}
      containers:
        - name: chemscraper
          image: {{ .Values.controller.images.chemscraper }}
          imagePullPolicy: {{ .Values.controller.imagePullPolicy | default "Always" }}
          env:
          - name: YOLO_SERVER_NAME
            value: {{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local
          - name: SSCRAPER_SERVER_NAME
            value: {{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local
          - name: LGAP_SERVER_NAME
            value: {{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local
          ports:
            - containerPort: 8000
        - name: symbolscraper
          image: {{ .Values.controller.images.symbolscraper }}
          imagePullPolicy: {{ .Values.controller.imagePullPolicy | default "Always" }}
          ports:
            - containerPort: 7002
        - name: yolo
          image: {{ .Values.controller.images.yolo }}
          imagePullPolicy: {{ .Values.controller.imagePullPolicy | default "Always" }}
          ports:
            - containerPort: 8005
        - name: lgap
          image: {{ .Values.controller.images.lgap }}
          imagePullPolicy: {{ .Values.controller.imagePullPolicy | default "Always" }}
          ports:
            - containerPort: 8007
          env:
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: "compute,utility"
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
        - name: chemdataextractorapi
          image: {{ .Values.controller.images.chemdataextractorapi }}
          imagePullPolicy: {{ .Values.controller.imagePullPolicy | default "Always" }}
          ports:
            - containerPort: 8012
        - name: reactionminer_search
          image: {{ .Values.controller.images.reactionminer_search }}
          imagePullPolicy: {{ .Values.controller.imagePullPolicy | default "Always" }}
          ports:
            - containerPort: 8013
          
{{- if .Values.config.enableGPU | default false }}
          # If we set limits, then only this container can mount the GPU - exclude this to use for both prod + staging
          #resources:
          #  limits:
          #    nvidia.com/gpu: "1"
      tolerations:
      - effect: NoSchedule
        key: nvidia.com/gpu
        operator: Exists
{{- end }}
